

Section 4:

publishing docker image to remote repository (like code pushed to git)
-- docker image push docker.io/dockerAccountUsername/accounts:s4
-- docker image push docker.io/dockerAccountUsername/cards:s4
-- docker image push docker.io/dockerAccountUsername/loans:s4

##1 Docker file Approach

1- docker version     -> check docker is installed or not
1.1- docker compose version

2- docker build . -t dockerAccountUsername/accounts(custom tag):s4(custom value)
              if running command not at the jar location replace (.) with path details -> ex - Microservices/target/

3- docker images      -> show all docker instance
4- docker ps          -> all docker running instances
4.1- docker ps -a     -> all docker stopped instances

5- docker inspect image imageId(from docker cli)    -> all details about docker image

6- docker run -d -p 8080:8080 dockerAccountUsername/accounts:s4(docker image name)  -> running docker container from docker image
   container 1 -> 8080(expose container port outside docker network):8080([Internal] at what port container going to start)
   container 2 -> 8081:8080(2 or more can have same port as internally they are working on own env/vm)
   -d  detached mode, i don't want to see logs in cli (optional)

6.1- docker start ***containerId****  -> to start any existing container
6.2- docker stop ***containerId****  -> to stop any existing container

7- ctrl+c  -> stop the container
8- clear   -> clean the console
9- pws     -> current directory details



##2 Buildpack Approach
-- pom.xml configuration to setup docker setup (image name config in plugin)

1- mvn spring-boot:build-image
2- docker run -d -p 8081:8081 dockerAccountUsername/loans:s4




##3 Google jib approach [only support java]
https://www.baeldung.com/jib-dockerizing

// local docker install not required - in case of that
   mvn compile jib:build

-- pom.xml configuration to setup docker setup (jib config in plugin)
1- mvn compile jib:dockerBuild
2- docker run -d -p 8082:8082 dockerAccountUsername/cards:s4







#### Managing multiple MS using single command - Docker Compose ####

- docker compose up
- docker compose up -d

- docker compose start   # only start stopped container
- docker compose stop    # stop all running container
- docker compose down    #stop and remove


