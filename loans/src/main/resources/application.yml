server:
  port: 8090
spring:
  application:
    name: loans
  profiles:
    active: "prod"  #set active profile to prod default
  datasource:
    # docker run -p 3307:3306 --name loansdb -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=loansdb -d mysql
    url: jdbc:h2:mem:testdb        #jdbc:mysql://localhost:3307/loansdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
   database-platform: org.hibernate.dialect.H2Dialect
   hibernate:
     ddl-auto: update
   show-sql: true
  sql:
    init:
      mode: always # always recreate the schema using schema.sql {with h2 its not necessury but with mysql it is}
  config:
    import: "optional:configserver:http://localhost:8071/" #import configuration from config server using path

management:
  endpoints:
    web:
      exposure:
        include: "*" #expose all actuator endpoints
  endpoint:
    health:
      show-details: always #show detailed health information
    shutdown:
      access: unrestricted #enable shutdown actuator endpoint [whenever service going to deregister from eureka, it will call this endpoint to shutdown the service]
  info:
    env:
      enabled: true #enable environment info in actuator info endpoint
  metrics:
    tags:
      application: ${spring.application.name} # group logs and metrics by application [micrometer]

endpoints:
  shutdown:
    enabled: true #enable shutdown actuator endpoint

eureka:
  instance:
    prefer-ip-address: true  # register with host hostname instead of ip
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

info:   # information about the service in eureka dashboard
  app:
    name: "loans"
    description: "Loans Service"
    version: 1.0.0

logging:
  level:
    com:
      loans: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"